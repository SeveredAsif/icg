JUL 10 2025
1. 7:30 pm -8:30 pm - basic code
1. 9:40 pm - 

14 JUL 2025
1. 10:13 am (during class) - 10:56 am -global var 
2. 8:33 pm - 10:52 pm - input 1 on going, global var, local var, assign done , println start 

15 JUL 2025
1. 10:14 am - 1:00 pm - arithmatic - multiply and add 
2. 7:30 pm - 8:04 pm - done till i + 2 * j, left -> labeling + printing logic 

16 JUL 2025
1. 12:42 am - 1:23 am - mod done 
2. 10:04 am - 11:00 am - labeling 
3. 11:08 am - 12:05 pm - LE jumping done 
4. 4:45 pm  - 5:09 pm , 5:12 pm - 5:33 pm - input 1 done 
5. 7:07 pm - 10:21 - input 2 done 

17 JUL 2025
1. 1:24 am - 3:51 am - input 3 works
2. 10:24 am - 11:03 am - without argument function call impl
3. 11:05 am -  2:27 pm - input 4 devastated me, not completed
4. 3:08 pm - 3:22 pm - got some hold of push pop 
5. 3:39 pm - 5:16 pm - push pop fixed. now function local variable handle to do 
6. 5:51 pm - 10:50 pm - input 4 done 
7. 1:30 am - 3:39 am - fixed for loop, made problem in while loop (4:00 am)


18 JUL 2025
1. 10:39 am - 11:23 am - while fixed 
2. 11:23 am - 12:54 pm - stack copy and in5 check 
3. 3:00 pm (earlier a little bit as well) - 4:35 pm - in5 problems erase - like return issue and while problem (silly),immediate returning left
4. 4:36 pm - 6:22 pm - stack read, problem is assignop (logical doesnt get printed first)
5. 6:28 pm - 6:49 - have to fix if else -- understood
6. 6:55 pm - 7:57 pm - if else fixed
7. 9:15 pm - 10:01 pm - fixed pop push issue in while and rel_op - input7 and 5 works perfect
8. 1:12 am - 2:30 am - array things check. terrified, might have to change push pops in unary, const_int, they dont match here 

19 JUL 2025
1. 9:50 am - 10:39 am - writing the assignop 
2. 10:48 am - 11:47 am - local array works, index calculation issue 
3. 12:03 pm - 

   | WHILE 
    { 
        newLabel();
        int whileLabel = label;
        writeIntoAsmFile(";while label : "+whileLabel);
        // label++;
        // int decAndcondCheck = label;
        // writeIntoAsmFile("L"+decAndcondCheck+":   ;will come here to update var and check condn");
        // label++;
        // int mainOperation = label;
        // writeIntoAsmFile("\tJMP L"+mainOperation+"  ;jumping to main cause");
    }
    LPAREN e=expression 
    { 
        label++;
        int nextL=label;
        label++;
        int endL=label;
        writeIntoAsmFile("\tCMP AX,0");
        //int nextLabel = label+1;
       
        writeIntoAsmFile("\tJE L"+endL+"  ;jumping to end cause condition false");
        //writeIntoAsmFile("\tJMP L"+endL+"  ;jumping to end cause condition false");
        writeIntoAsmFile("L"+nextL+":   ;will come here if true");
    }
    RPAREN s=statement
    {
        writeIntoParserLogFile(
            "Line " + $s.stop.getLine() + ": statement : WHILE LPAREN expression RPAREN statement\n\n"
            + "while(" + $e.name_line + ")" + $s.name_line + "\n"
        );
        $name_line = "while(" + $e.name_line + ")" + $s.name_line;
        $retuurn=false;
        // writeIntoAsmFile("\tPOP AX");
        // stack_offset-=2;

        
        writeIntoAsmFile("\tJMP L"+whileLabel+";whilelabel jump");
        writeIntoAsmFile("L"+endL+":  ;while ended");
    }
   | WHILE 
    { 
        newLabel();
        int whileLabel = label;
        writeIntoAsmFile(";while label : unary"+whileLabel);

    }
    LPAREN u=unary_expression 
    { 
        label++;
        int nextL=label;
        label++;
        int endL=label;

    }
    RPAREN s=statement
    {

        $name_line = "while(" + $u.name_line + ")" + $s.name_line;
        $retuurn=false;
        // writeIntoAsmFile("\tPOP AX");
        // stack_offset-=2;

        writeIntoAsmFile("\tCMP AX,0;in unary");
        //int nextLabel = label+1;
       
        writeIntoAsmFile("\tJE L"+endL+"  ;jumping to end cause condition false");
        //writeIntoAsmFile("\tJMP L"+endL+"  ;jumping to end cause condition false");
        writeIntoAsmFile("L"+nextL+":   ;will come here if true");
        writeIntoAsmFile("\tJMP L"+whileLabel+";whilelabel jump");
        writeIntoAsmFile("L"+endL+":  ;while ended");
    }
 

